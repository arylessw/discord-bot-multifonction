module.exports = {
  name: 'moveall',
  description: 'D√©placer tous les membres d\'un salon vocal vers un autre',
  async execute(message, args, client) {
    if (!message.guild) {
      return message.reply('Cette commande doit √™tre utilis√©e dans un serveur.');
    }

    if (!message.member.permissions.has('Administrator')) {
      return message.reply('Vous devez √™tre administrateur pour utiliser cette commande.');
    }

    const sourceChannel = message.mentions.channels.first();
    const targetChannel = message.mentions.channels.last();

    if (!sourceChannel || !targetChannel) {
      return message.reply('Veuillez mentionner le salon source et le salon cible.');
    }

    if (sourceChannel.type !== 'GUILD_VOICE' || targetChannel.type !== 'GUILD_VOICE') {
      return message.reply('Les deux salons doivent √™tre des salons vocaux.');
    }

    if (sourceChannel.id === targetChannel.id) {
      return message.reply('Les salons source et cible doivent √™tre diff√©rents.');
    }

    try {
      // R√©cup√©rer tous les membres dans le salon source
      const membersInSource = sourceChannel.members;

      if (membersInSource.size === 0) {
        return message.reply('Aucun membre n\'est actuellement dans le salon source.');
      }

      // D√©placer chaque membre
      let movedCount = 0;
      let failedCount = 0;

      for (const [id, member] of membersInSource) {
        try {
          await member.voice.setChannel(targetChannel);
          movedCount++;
        } catch (error) {
          console.error(`Erreur lors du d√©placement de ${member.user.tag}:`, error);
          failedCount++;
        }
      }

      // Envoyer un message de confirmation
      message.reply(
        `‚úÖ D√©placement termin√© !\n` +
        `- ${movedCount} membre(s) d√©plac√©(s) avec succ√®s\n` +
        `- ${failedCount} √©chec(s)`
      );

      // Envoyer dans le canal de logs si configur√©
      const config = require('../../config/server_config.json');
      if (config[message.guild.id]?.logChannel) {
        const logChannel = message.guild.channels.cache.get(config[message.guild.id].logChannel);
        if (logChannel) {
          const embed = {
            title: 'üéµ Membres d√©plac√©s',
            fields: [
              {
                name: 'üìå Salon source',
                value: sourceChannel.toString(),
                inline: true
              },
              {
                name: 'üìå Salon cible',
                value: targetChannel.toString(),
                inline: true
              },
              {
                name: '‚úÖ D√©plac√©s',
                value: `${movedCount} membre(s)`,
                inline: true
              },
              {
                name: '‚ùå √âchecs',
                value: `${failedCount} membre(s)`,
                inline: true
              },
              {
                name: 'üë§ Mod√©rateur',
                value: message.author.toString(),
                inline: true
              }
            ],
            color: 0x00ff00,
            timestamp: new Date()
          };
          logChannel.send({ embeds: [embed] });
        }
      }
    } catch (error) {
      console.error('Erreur lors du d√©placement des membres:', error);
      message.reply('‚ùå Une erreur est survenue lors du d√©placement des membres.');
    }
  }
}; 